/*
 * Copyright (c) 2025 Li Auto Inc. and its affiliates
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group XmlTypes;

type_5() ::= <<float32>>

type_6() ::= <<float64>>

type_13() ::= <<float64>>

type_1() ::= <<int16>>

type_2() ::= <<int32>>

type_11() ::= <<int64>>

type_3() ::= <<uint16>>

type_4() ::= <<uint32>>

type_12() ::= <<uint64>>

type_8() ::= <<char8>>

type_14() ::= <<char16>>

type_7() ::= <<boolean>>

type_9() ::= <<uint8>>

type_d() ::= <<string>>

type_15() ::= <<wstring>>

type_19(key, value, maxsize, empty) ::= <<map>>

type_f_first(prev) ::= <<>>
type_f_second(prev, size) ::= <<>>
type_f(firs, secon, type) ::= <<$firs$$secon$>>

type_a(name) ::= <<$name$>>

type_b(name) ::= <<$name$>>

type_c(name) ::= <<$name$>>

type_10(name) ::= <<$name$>>

// TODO Para que sirve empty en VBSBuffers?
type_e(ctx, type, contenttype, maxsize, empty) ::= <<seq_$type$_$empty$>>

type_1a(name, type) ::= <<$name$>>

type_1b(name) ::= <<$name$>>

type_1d(name) ::= <<int8>>

type_1e(name) ::= <<uint8>>

initialValues ::= [
        "type_d":"\"\"",
        "type_15":"\"\"",
        default: // not basic type.
]
