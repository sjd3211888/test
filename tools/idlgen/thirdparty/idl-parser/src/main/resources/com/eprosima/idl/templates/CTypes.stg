// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ------------------------------------------------------------------
// Modification history:
// 2024-01 ~ 2025-05: Enhancement of idlgen: added tostring/get_type_name interfaces, uint64_t type adjustment, cleanup of fast related content, etc.
// ------------------------------------------------------------------

group CTypes;

type_5() ::= <<float>>

type_6() ::= <<double>>

type_13() ::= <<double>>

type_1() ::= <<int16_t>>

type_2() ::= <<int32_t>>

type_11() ::= <<int64_t>>

type_3() ::= <<uint16_t>>

type_4() ::= <<uint32_t>>

type_12(ctx) ::= <<$if(ctx.RtiIdl)$unsigned long long$else$uint64_t$endif$>>

type_8() ::= <<char>>

type_14() ::= <<wchar_t>>

type_7() ::= <<bool>>

type_9() ::= <<uint8_t>>
//Todo fixed string
type_d(maxsize) ::= <<char>>

type_15(maxsize) ::= <<char>>
//todo
type_19(key, value, maxsize, empty) ::= <<std::map>>

type_f_first(prev) ::= <<$prev$>>
type_f_second(prev, size) ::= <<>>
type_f(firs, secon, type) ::= <<$firs$$type$$secon$>>

type_a(name) ::= <<$name$>>

type_b(name) ::= <<$name$>>

type_c(name) ::= <<$name$>>

type_10(name) ::= <<$name$>>

// TODO Para que sirve empty en VBSBuffers?
type_e(ctx, type, contenttype, maxsize, empty) ::= <<$type$$empty$>>

type_1a(name, type) ::= <<$name$>>

type_1b(name) ::= <<$name$>>

type_1d(name) ::= <<int8_t>>

type_1e(name) ::= <<uint8_t>>

initialValues ::= [
        default: // not basic type.
]
