/*
 * Copyright (c) 2025 Li Auto Inc. and its affiliates
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group TestBash;

main(ctx, definitions) ::= <<

#!/bin/bash

if [ "\$#" -ne 2 ]; then
    echo "Usage: \$0 <runtime> <release_path>"
    exit 1
fi

runtime=\$1

pkill -f './$ctx.OnlyFileName$ publisher'
pkill -f './$ctx.OnlyFileName$ subscriber'

export LD_LIBRARY_PATH=\$2/vbs/lib/:\$2/third-party/lib/

./$ctx.OnlyFileName$ subscriber > sub_test.txt 2>&1 &
sub_pid=\$!

sleep 0.1

./$ctx.OnlyFileName$ publisher > pub_test.txt 2>&1 &
pub_pid=\$!

sleep \$runtime

kill \$pub_pid

kill \$sub_pid

echo -e "\n===== Sub Test Output ====="
cat sub_test.txt

echo -e "\n===== Pub Test Output ====="
cat pub_test.txt

wait \$pub_pid 2>/dev/null
wait \$sub_pid 2>/dev/null

wc -c < pub_output.txt
wc -c < sub_output.txt

$if(ctx.IsMultiFlag)$
filesize_pub=\$(wc -c < pub_output.txt)
filesize_sub=\$(wc -c < sub_output.txt)

if [ \$((filesize_pub * 2)) -eq \$filesize_sub ] || [ \$((filesize_sub * 2)) -eq \$filesize_pub ]; then
    echo "一个文件的大小是另一个文件的两倍。"
    exit 0
else
    echo "文件大小不符合两倍关系。"
    exit 1
fi
$else$
if cmp -s pub_output.txt sub_output.txt; then
    filesize=\$(wc -c < pub_output.txt)
    echo "\$filesize 文件大小，文件内容一致"
    exit 0
else
    echo "文件内容不一致"
    diff_output=\$(diff --text pub_output.txt sub_output.txt | sed -n '/^>/p; /^</p' | head -c 1000)
    echo "差异点："
    echo "\$diff_output" | sed -n 's/^< //p' | awk '{print "pub: \"" substr(\$0, 1, 200) "\""}'
    echo "\$diff_output" | sed -n 's/^> //p' | awk '{print "sub: \"" substr(\$0, 1, 200) "\""}'
    exit 1
fi
$endif$

>>

module(ctx, parent, module, definition_list) ::= <<
$definition_list$
>>

definition_list(definitions) ::= <<
$definitions; separator="\n"$

>>

annotation(ctx, annotation) ::= <<>>

interface(ctx, parent, interface, export_list) ::= <<
$export_list$
>>

export_list(exports) ::= <<
$exports; separator="\n"$

>>

exception(ctx, parent, exception) ::= <<>>

operation(ctx, parent, operation, param_list) ::= <<>>

param_list(parameters) ::= <<>>

param(parameter) ::= <<>>

const_decl(ctx, parent, const) ::= <<>>

typedef_decl(ctx, parent, typedefs) ::= <<>>

struct_type(ctx, parent, struct) ::= <<>>

union_type(ctx, parent, union) ::= <<>>

enum_type(ctx, parent, enum) ::= <<>>

bitmask_type(ctx, parent, bitmask) ::= <<>>

bitset_type(ctx, parent, bitset) ::= <<>>

/*UTILS*/
namespace_get(ctx) ::= <<$if(ctx.NotUseVbsFramework)$evbs::edds::dds::$else$vbs::$endif$>>